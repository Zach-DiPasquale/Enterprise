// <auto-generated />
using KennUwareHR.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace KennUwareHR.Migrations
{
    [DbContext(typeof(HRContext))]
    [Migration("20180412170401_UpdateEmployeeFieldForAuth")]
    partial class UpdateEmployeeFieldForAuth
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn)
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125");

            modelBuilder.Entity("KennUwareHR.Models.Authentication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("EmployeeId");

                    b.Property<string>("HashedPassword");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Authentications");
                });

            modelBuilder.Entity("KennUwareHR.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("KennUwareHR.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<int>("Commission");

                    b.Property<DateTime>("DateOfBirth");

                    b.Property<int>("DepartmentId");

                    b.Property<int>("Employee");

                    b.Property<DateTime>("EmploymentEndDate");

                    b.Property<DateTime>("EmploymentStartDate");

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<int>("MyManagerId");

                    b.Property<string>("PhoneNumber");

                    b.Property<int>("PositionId");

                    b.Property<int>("RegionId");

                    b.Property<int>("RoleId");

                    b.Property<int>("Salary");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("Employee");

                    b.HasIndex("PositionId");

                    b.HasIndex("RegionId");

                    b.HasIndex("RoleId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("KennUwareHR.Models.Leave", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Approved");

                    b.Property<int>("EmployeeId");

                    b.Property<DateTime>("EndTime");

                    b.Property<DateTime>("StartTime");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Leaves");
                });

            modelBuilder.Entity("KennUwareHR.Models.Paycheck", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("BasePay");

                    b.Property<double>("BonusPay");

                    b.Property<double>("Commission");

                    b.Property<int>("EmployeeId");

                    b.Property<DateTime>("IssueDate");

                    b.Property<DateTime>("PayPeriodEnd");

                    b.Property<DateTime>("PayPeriodStart");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Paychecks");
                });

            modelBuilder.Entity("KennUwareHR.Models.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("KennUwareHR.Models.Region", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BonusRevenueThreshold");

                    b.Property<string>("Country");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Regions");
                });

            modelBuilder.Entity("KennUwareHR.Models.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<int>("ReviewedEmployeeId");

                    b.Property<int>("ReviewerEmployeeId");

                    b.HasKey("Id");

                    b.HasIndex("ReviewedEmployeeId");

                    b.HasIndex("ReviewerEmployeeId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("KennUwareHR.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("KennUwareHR.Models.Authentication", b =>
                {
                    b.HasOne("KennUwareHR.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KennUwareHR.Models.Employee", b =>
                {
                    b.HasOne("KennUwareHR.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KennUwareHR.Models.Employee", "MyManager")
                        .WithMany("Managing")
                        .HasForeignKey("Employee")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KennUwareHR.Models.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KennUwareHR.Models.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KennUwareHR.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KennUwareHR.Models.Leave", b =>
                {
                    b.HasOne("KennUwareHR.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KennUwareHR.Models.Paycheck", b =>
                {
                    b.HasOne("KennUwareHR.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KennUwareHR.Models.Review", b =>
                {
                    b.HasOne("KennUwareHR.Models.Employee", "ReviewedEmployee")
                        .WithMany()
                        .HasForeignKey("ReviewedEmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KennUwareHR.Models.Employee", "ReviewerEmployee")
                        .WithMany()
                        .HasForeignKey("ReviewerEmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
